name: Deploy CloudFormation to Dev

permissions:
  contents: read

on:
  push:
    branches: [ '*' ]

jobs:
  deploy-cloudformation:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY}}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2  # Change to your region

    - name: Confirm identity
      run: aws sts get-caller-identity

    - name: Validate CloudFormation templates
      run: |
        for template in cloudformation/*.yaml; do
          if [ ! -f "$template" ]; then
            echo "No CloudFormation templates found in cloudformation directory"
            exit 1
          fi
          echo "Validating template: $template"
          aws cloudformation validate-template --template-body file://$template
        done

    - name: Deploy CloudFormation stacks
      id: deploy
      run: |
        failed_stacks=()
        for template in cloudformation/*.yaml; do
          if [ ! -f "$template" ]; then
            echo "No CloudFormation templates found in cloudformation directory"
            exit 1
          fi
          
          stack_name=$(basename "$template" .yaml)-dev-stack
          echo "Deploying $stack_name using $template..."

          if ! aws cloudformation deploy \
              --template-file "$template" \
              --stack-name "$stack_name" \
              --capabilities CAPABILITY_NAMED_IAM \
              --parameter-overrides Environment=dev; then
            failed_stacks+=("$stack_name")
          fi
        done

        if [ ${#failed_stacks[@]} -ne 0 ]; then
          echo "The following stacks failed to deploy:"
          printf '%s\n' "${failed_stacks[@]}"
          exit 1
        fi

    - name: Show CloudFormation stack events (on failure)
      if: failure()
      run: |
        for template in cloudformation/*.yaml; do
          stack_name=$(basename "$template" .yaml)-dev-stack
          echo "Events for stack $stack_name:"
          aws cloudformation describe-stack-events --stack-name "$stack_name" || true
        done

        